define("local_stoodle/quiz",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;_exports.init=()=>{const questionSet=JSON.parse(document.getElementById("question-set").innerHTML),answerSet=JSON.parse(document.getElementById("answer-set").innerHTML),questionDiv=document.querySelector(".js-answer-area"),scoreArea=document.querySelector(".score"),totalQuestions=Object.values(questionSet).length,quizMap=function(qSet,oSet){let resultSet=new Map;for(const qKey in Object.values(qSet)){let optionArray=[],answerArray=[];for(const oKey in Object.values(oSet)){parseInt(Object.values(qSet)[qKey].id)===parseInt(Object.values(oSet)[oKey].stoodle_quiz_questionsid)&&(optionArray.push(Object.values(oSet)[oKey].option_text),1===parseInt(Object.values(oSet)[oKey].is_correct)&&answerArray.push(Object.values(oSet)[oKey].option_text))}resultSet.set(Object.values(qSet)[qKey].question_text,[optionArray,answerArray])}return resultSet}(questionSet,answerSet),questionTypes=function(questions,options){const questionTypesArray=new Array(Object.values(questions).length);for(const questionKey in Object.values(questions)){const questionId=parseInt(Object.values(questions)[questionKey].id);let count=0;for(const answerKey in Object.values(options)){const answerObject=Object.values(options)[answerKey];parseInt(answerObject.stoodle_quiz_questionsid)===questionId&&1===parseInt(answerObject.is_correct)&&count++}count>1?questionTypesArray[questionKey]=2:1===count&&1===parseInt(Object.values(questions)[questionKey].is_multiple_choice)?questionTypesArray[questionKey]=1:questionTypesArray[questionKey]=0}return questionTypesArray}(questionSet,answerSet);scoreArea.innerHTML="Score: 0 / "+totalQuestions,document.querySelector(".submit-button").addEventListener("click",(()=>{!function(){const correctIcon="✅",incorrectIcon="❌";let numCorrect=0,index=0;for(const[key,value]of quizMap.entries()){const questionText="Question "+(index+1)+": "+key;if(0===questionTypes[index]){document.getElementById("option_"+index).value===getAnswerAtIndex(quizMap,key,0)?(window.console.log("Question "+(index+1)+" is correct"),numCorrect++,questionDiv.children[index].children[0].innerText=questionText+" "+correctIcon):questionDiv.children[index].children[0].innerText=questionText+incorrectIcon+" (manual review required)"}else if(1===questionTypes[index]){const option=document.querySelector('input[name= "'+index+'"]:checked');if(null===option)return void alert("Question "+(index+1)+" is unanswered");getAnswerAtIndex(quizMap,key,0)===option.value?(window.console.log("Question "+(index+1)+" is correct"),numCorrect++,questionDiv.children[index].children[0].innerText=questionText+" "+correctIcon):questionDiv.children[index].children[0].innerText=questionText+" "+incorrectIcon}else if(2===questionTypes[index]){const option=document.querySelectorAll('input[name="'+index+'"]:checked');if(option.length<1)return void alert("Question "+(index+1)+" is unanswered");let selectAllCorrectCounter=0;if(value[1].length!==option.length){questionDiv.children[index].children[0].innerText=questionText+" "+incorrectIcon;continue}for(let i=0;i<value[1].length;i++)getAnswerAtIndex(quizMap,key,i)===option[i].value&&selectAllCorrectCounter++;selectAllCorrectCounter===value[1].length?(numCorrect++,window.console.log("Question "+(index+1)+" is correct"),questionDiv.children[index].children[0].innerText=questionText+" "+correctIcon):questionDiv.children[index].children[0].innerText=questionText+" "+incorrectIcon}index++}scoreArea.innerText="Score: "+numCorrect+" / "+totalQuestions}()}));let index=0;for(const[key,value]of quizMap.entries()){const newDiv=document.createElement("div");newDiv.id="stoodle-div";const questionText=document.createElement("p");switch(questionText.id="stoodle-question-text",questionText.textContent="Question "+(index+1)+": "+key,newDiv.appendChild(questionText),questionTypes[index]){default:case 0:newDiv.id="open-response",createOpenResponseQuestion(newDiv,"option_"+index);break;case 1:newDiv.id="multiple-choice";for(const element in value[0])createInputNodeRadio(newDiv,"option_"+index,index,getOptionAtIndex(quizMap,key,element));break;case 2:newDiv.id="select-all";for(const element in value[0])createInputNodeCheckBox(newDiv,"option_"+index,index,getOptionAtIndex(quizMap,key,element))}questionDiv.appendChild(newDiv),index++}function createOpenResponseQuestion(parent,name){const label=document.createElement("label"),textInput=document.createElement("textarea");textInput.id=name,textInput.cols=100,label.appendChild(textInput),parent.appendChild(label)}function createInputNodeRadio(parent,id,name,value){const radio=document.createElement("input");radio.type="radio",radio.id=id,radio.name=name,radio.value=value;const label=document.createElement("label");label.appendChild(radio),label.appendChild(document.createTextNode(value)),parent.appendChild(label),parent.appendChild(document.createElement("br"))}function createInputNodeCheckBox(parent,id,name,value){const checkbox=document.createElement("input");checkbox.type="checkbox",checkbox.id=id,checkbox.name=name,checkbox.value=value;const label=document.createElement("label");label.appendChild(checkbox),label.appendChild(document.createTextNode(value)),parent.appendChild(label),parent.appendChild(document.createElement("br"))}function getOptionAtIndex(map,question,index){return map.get(question)[0][index]}function getAnswerAtIndex(map,question,index){return map.get(question)[1][index]}}}));

//# sourceMappingURL=quiz.min.js.map