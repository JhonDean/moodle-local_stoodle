{"version":3,"file":"flashcard.min.js","sources":["../src/flashcard.js"],"sourcesContent":["export const init = () => {\n    const dbFlashcardSet = JSON.parse(document.querySelector(\".flashcard-set\").innerHTML);\n    const htmlCard = document.querySelector(\".js-card\");\n    const nextButton = document.querySelector('.js-next');\n    const previousButton = document.querySelector('.js-prev');\n    const dbNames = Object.keys(dbFlashcardSet);\n\n    let currFlashcardElem = 0;\n    let onAnswerSide = false;\n    validateFlashcard(currFlashcardElem);\n\n    // Clicking the flashcard itself\n    htmlCard.addEventListener(\"click\", () => {\n        onAnswerSide = !onAnswerSide;\n        htmlCard.classList.toggle('is-flipped');\n        document.getElementById(\"card-answer\").innerHTML = dbFlashcardSet[dbNames[currFlashcardElem]].answer;\n    });\n\n    // Previous Flashcard Button\n    previousButton.addEventListener('click', () => {\n        if (--currFlashcardElem < 0) {\n            currFlashcardElem = dbNames.length - 1;\n        }\n        validateFlashcard(currFlashcardElem);\n    });\n\n    // Next Flashcard Button\n    nextButton.addEventListener('click', () => {\n        if (++currFlashcardElem > dbNames.length - 1) {\n            currFlashcardElem = 0;\n        }\n        validateFlashcard(currFlashcardElem);\n    });\n\n    /**\n     * Sets flashcard to question side and displays a question at a specific element.\n     *\n     * @param {object} arrElem The flashcard element.\n     */\n    function validateFlashcard(arrElem) {\n        if (onAnswerSide) {\n            htmlCard.classList.toggle('is-flipped');\n            onAnswerSide = false;\n        }\n        document.getElementById(\"card-question\").innerHTML = dbFlashcardSet[dbNames[arrElem]].question;\n        document.querySelector(\".js-counter\").innerText = \"Flashcard No. \" + (currFlashcardElem + 1);\n    }\n};"],"names":["_exports","init","dbFlashcardSet","JSON","parse","document","querySelector","innerHTML","htmlCard","nextButton","previousButton","dbNames","Object","keys","currFlashcardElem","onAnswerSide","validateFlashcard","arrElem","classList","toggle","getElementById","question","innerText","addEventListener","answer","length"],"mappings":"8IA+CEA,SAAAC,KA/CkBA,KAChB,MAAMC,eAAiBC,KAAKC,MAAMC,SAASC,cAAc,kBAAkBC,WACrEC,SAAWH,SAASC,cAAc,YAClCG,WAAaJ,SAASC,cAAc,YACpCI,eAAiBL,SAASC,cAAc,YACxCK,QAAUC,OAAOC,KAAKX,gBAE5B,IAAIY,kBAAoB,EACpBC,cAAe,EA+BnB,SAASC,kBAAkBC,SACnBF,eACAP,SAASU,UAAUC,OAAO,cAC1BJ,cAAe,GAEnBV,SAASe,eAAe,iBAAiBb,UAAYL,eAAeS,QAAQM,UAAUI,SACtFhB,SAASC,cAAc,eAAegB,UAAY,kBAAoBR,kBAAoB,GApC9FE,kBAAkBF,mBAGlBN,SAASe,iBAAiB,SAAS,KAC/BR,cAAgBA,aAChBP,SAASU,UAAUC,OAAO,cAC1Bd,SAASe,eAAe,eAAeb,UAAYL,eAAeS,QAAQG,oBAAoBU,MAAM,IAIxGd,eAAea,iBAAiB,SAAS,OAC/BT,kBAAoB,IACtBA,kBAAoBH,QAAQc,OAAS,GAEzCT,kBAAkBF,kBAAkB,IAIxCL,WAAWc,iBAAiB,SAAS,OAC3BT,kBAAoBH,QAAQc,OAAS,IACvCX,kBAAoB,GAExBE,kBAAkBF,kBAAkB,IAgB1C"}