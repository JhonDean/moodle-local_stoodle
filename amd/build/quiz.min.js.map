{"version":3,"file":"quiz.min.js","sources":["../src/quiz.js"],"sourcesContent":["export const init = () => {\n    const questionSet = JSON.parse(document.getElementById(\"question-set\").innerHTML);\n    const answerSet = JSON.parse(document.getElementById(\"answer-set\").innerHTML);\n    const questionDiv = document.querySelector(\".js-answer-area\");\n    const scoreArea = document.querySelector(\".score\");\n    const totalQuestions = Object.values(questionSet).length;\n\n    scoreArea.innerHTML = \"Score: 0 / \" + totalQuestions;\n    document.querySelector(\".submit-button\").addEventListener('click', () => {\n        questionValidation();\n    });\n\n    // Create questions and options\n    for (const key in Object.values(questionSet)) {\n        const newDiv = document.createElement(\"div\");\n        newDiv.id = \"stoodle-div\";\n        const questionText = document.createElement(\"p\");\n        questionText.id = \"stoodle-question-text\";\n        questionText.textContent = \"Question \" + (parseInt(key) + 1) + \": \" + Object.values(questionSet)[key].question_text;\n        newDiv.appendChild(questionText);\n\n        // Check if it's a multiple choice or open-response question\n        if (parseInt(Object.values(questionSet)[key].is_multiple_choice) === 0) {\n            newDiv.id = \"open-response\";\n            createOpenResponseQuestion(newDiv, Object.values(questionSet)[key].id);\n        } else {\n            newDiv.id = \"multiple-choice\";\n            createMultipleChoiceQuestion(newDiv, Object.values(questionSet)[key].id, answerSet);\n        }\n        questionDiv.appendChild(newDiv);\n    }\n\n    /**\n     * Creates a multiple choice question.\n     *\n     * @param {object} parent\n     * @param {integer} questionId\n     * @param {object} answerSet\n     */\n    function createMultipleChoiceQuestion(parent, questionId, answerSet) {\n        for (const key in Object.values(answerSet)) {\n            // Match answer id to question id\n            const dbId = Object.values(answerSet)[key].stoodle_quiz_questionsid;\n            if (dbId === questionId) {\n                createInputNode(parent, \"someid\", (questionId), Object.values(answerSet)[key].option_text);\n            }\n        }\n    }\n\n    /**\n     * Creates a open response question.\n     *\n     * @param {object} parent\n     * @param {string} name\n     */\n    function createOpenResponseQuestion(parent, name) {\n        const textInput = document.createElement(\"input\");\n        textInput.type = \"text\";\n        textInput.name = name;\n        parent.appendChild(textInput);\n    }\n\n    /**\n     * Creates a multiple choice question.\n     *\n     * @param {object} parent\n     * @param {string} id\n     * @param {string} name\n     * @param {string} value\n     */\n    function createInputNode(parent, id, name, value) {\n        // Create a radio input\n        const radio = document.createElement(\"input\");\n        radio.type = \"radio\";\n        radio.id = id;\n        radio.name = name;\n        radio.value = value;\n\n        // Create the label to go with it\n        const label = document.createElement(\"label\");\n        label.appendChild(document.createTextNode(value));\n\n        // Append them to the parent\n        parent.appendChild(radio);\n        parent.appendChild(label);\n        parent.appendChild(document.createElement(\"br\"));\n    }\n\n    /**\n     * Validates the questions on the quiz. Checks if right or wrong.\n     *\n     */\n    function questionValidation() {\n        let numCorrect = 0;\n        for (const key in Object.values(questionSet)) {\n            const question = Object.values(questionSet)[key].id;\n            const parent = document.querySelector('input[name = \"' + question + '\"]').parentElement;\n            let option = null;\n\n            if (parent.id === \"multiple-choice\") {\n                option = document.querySelector('input[name = \"' + question + '\"]:checked');\n            } else {\n                option = document.querySelector('input[name = \"' + question + '\"]');\n            }\n\n            if (option === null) {\n                alert(\"Question \" + (parseInt(key) + 1) + \" is unanswered\");\n                return;\n            }\n\n            // Comparing them to the answers\n            for (const answerKey in Object.values(answerSet)) {\n                const questionText = \"Question \" + (parseInt(key) + 1) + \": \" + Object.values(questionSet)[key].question_text;\n                const answerText = Object.values(answerSet)[answerKey].option_text;\n                const answerIsCorrect = parseInt(Object.values(answerSet)[answerKey].is_correct);\n                if (answerText === option.value && answerIsCorrect === 1) {\n                    window.console.log(\"Question \" + (parseInt(key) + 1) + \" is correct\");\n                    numCorrect++;\n                    parent.children[0].innerText = questionText + \" \\u{2705}\";\n                    break;\n                } else if (answerText === option.value && answerIsCorrect === 0) {\n                    window.console.log(\"Question \" + (parseInt(key) + 1) + \" is wrong\");\n                    parent.children[0].innerText = questionText + \" \\u{274C}\";\n                    break;\n                } else if (parent.id === \"open-response\") {\n                    parent.children[0].innerText = questionText + \" \\u{274C} (manual review required)\";\n                }\n            }\n        }\n\n        scoreArea.innerText = \"Score: \" + numCorrect + \" / \" + totalQuestions;\n    }\n};\n"],"names":["_exports","init","questionSet","JSON","parse","document","getElementById","innerHTML","answerSet","questionDiv","querySelector","scoreArea","totalQuestions","Object","values","length","addEventListener","numCorrect","key","question","id","parent","parentElement","option","alert","parseInt","answerKey","questionText","question_text","answerText","option_text","answerIsCorrect","is_correct","value","window","console","log","children","innerText","questionValidation","newDiv","createElement","textContent","appendChild","is_multiple_choice","createOpenResponseQuestion","createMultipleChoiceQuestion","questionId","stoodle_quiz_questionsid","createInputNode","name","textInput","type","radio","label","createTextNode"],"mappings":"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"}